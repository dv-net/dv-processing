// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package repo_transfers

import (
	"context"

	"github.com/dv-net/dv-processing/internal/constants"
	"github.com/dv-net/dv-processing/internal/models"
	"github.com/dv-net/dv-processing/internal/workflow"
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	Create(ctx context.Context, arg CreateParams) (*models.Transfer, error)
	ExistsByTxHashAndOwnerID(ctx context.Context, txHash pgtype.Text, ownerID uuid.UUID) (bool, error)
	FindAllNewTransfers(ctx context.Context) ([]*models.Transfer, error)
	GetActiveTronTransfersBurn(ctx context.Context) (*GetActiveTronTransfersBurnRow, error)
	GetActiveTronTransfersResources(ctx context.Context) (*GetActiveTronTransfersResourcesRow, error)
	GetByID(ctx context.Context, id uuid.UUID) (*models.Transfer, error)
	GetByRequestID(ctx context.Context, requestID string) (*models.Transfer, error)
	GetByTxHashAndOwnerID(ctx context.Context, txHash pgtype.Text, ownerID uuid.UUID) (*models.Transfer, error)
	GetStateData(ctx context.Context, id uuid.UUID) (map[string]any, error)
	GetWorkflowSnapshot(ctx context.Context, id uuid.UUID) (workflow.Snapshot, error)
	SetStateData(ctx context.Context, iD uuid.UUID, stateData map[string]any) error
	SetStatus(ctx context.Context, iD uuid.UUID, status constants.TransferStatus) error
	SetTxHash(ctx context.Context, iD uuid.UUID, txHash pgtype.Text) (*models.Transfer, error)
	SetWorkflowSnapshot(ctx context.Context, iD uuid.UUID, workflowSnapshot workflow.Snapshot) error
}

var _ Querier = (*Queries)(nil)
