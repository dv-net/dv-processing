// Code generated by pgxgen. DO NOT EDIT.
// versions:
//
//	pgxgen v0.3.10
package repo_wallets_processing

import (
	"strings"

	"github.com/gobeam/stringy"
)

type TableName string

func (s TableName) String() string { return string(s) }

const (
	TableNameProcessingWallets TableName = "processing_wallets"
)

type ColumnName string

func (s ColumnName) String() string { return string(s) }

func (s ColumnName) StructName() string {
	v := stringy.New(string(s)).CamelCase().Get()
	v = stringy.New(v).UcFirst()
	return strings.ReplaceAll(v, "Id", "ID")
}

type ColumnNames []ColumnName

func (s ColumnNames) Strings() []string {
	res := make([]string, len(s))
	for idx, colName := range s {
		res[idx] = colName.String()
	}
	return res
}

const (
	ColumnNameProcessingWalletsId         ColumnName = "id"
	ColumnNameProcessingWalletsBlockchain ColumnName = "blockchain"
	ColumnNameProcessingWalletsAddress    ColumnName = "address"
	ColumnNameProcessingWalletsOwnerId    ColumnName = "owner_id"
	ColumnNameProcessingWalletsSequence   ColumnName = "sequence"
	ColumnNameProcessingWalletsIsActive   ColumnName = "is_active"
	ColumnNameProcessingWalletsIsDirty    ColumnName = "is_dirty"
	ColumnNameProcessingWalletsCreatedAt  ColumnName = "created_at"
	ColumnNameProcessingWalletsUpdatedAt  ColumnName = "updated_at"
)

func ProcessingWalletsColumnNames() ColumnNames {
	return ColumnNames{
		ColumnNameProcessingWalletsId,
		ColumnNameProcessingWalletsBlockchain,
		ColumnNameProcessingWalletsAddress,
		ColumnNameProcessingWalletsOwnerId,
		ColumnNameProcessingWalletsSequence,
		ColumnNameProcessingWalletsIsActive,
		ColumnNameProcessingWalletsIsDirty,
		ColumnNameProcessingWalletsCreatedAt,
		ColumnNameProcessingWalletsUpdatedAt,
	}
}
